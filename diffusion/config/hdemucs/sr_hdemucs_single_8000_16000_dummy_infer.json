{
  "name": "sr_vctk",
  "phase": "train",
  // train or val
  "gpu_ids": [
    0
  ],
  "path": {
    //set the path
    "log": "logs",
    "tb_logger": "tb_logger",
    "results": "results",
    "checkpoint": "checkpoint",
//    "experiments_root": "experiments/sr_vctk_220622_211945",
    "resume_state": "experiments/sr_vctk_220622_220956/checkpoint/I400_E100"
    // "resume_state": "experiments/sr_ffhq_210806_204158/checkpoint/I640000_E37" //pretrain model or training state
  },
  "datasets": {
    "train": {
      "name": "VCTK",
      "mode": "HR",
      // whether need LR img
      "json_dir": "../egs/valentini/noisy-8-clean-16(4)/tr",
      "source_sr": 8000,
      // low resolution need to super_resolution
      "target_sr": 16000,
      // high resolution
      "stride": 2,
      // in seconds, how much to stride between training examples
      "segment": 2,
      // in seconds, what length is each training example
      "batch_size": 2,
      "num_workers": 8,
      "use_shuffle": true,
      "data_len": -1
      // -1 represents all data used in train
    },
    "val": {
      "name": "VCTK",
      "mode": "LRHR",
      "json_dir": "../egs/valentini/noisy-8-clean-16(4)/val",
      "source_sr": 8000,
      // low resolution need to super_resolution
      "target_sr": 16000,
      "batch_size": 2,
      "data_len": 50
      // data length in validation
    }
  },
  "model": {
    "which_model_G": "hdemucs",
    // use the ddpm or sr3 network structure
    "finetune_norm": false,
    "hdemucs" : {
      "in_channels": 2,
      "out_channels": 1,
      "channels": 48
    },
    "beta_schedule": {
      // use munual beta_schedule for acceleration
      "train": {
        "schedule": "linear",
        "n_timestep": 100,
        "linear_start": 1e-6,
        "linear_end": 1e-2
      },
      "val": {
        "schedule": "linear",
        "n_timestep": 100,
        "linear_start": 1e-6,
        "linear_end": 1e-2
      }
    },
    "diffusion": {
      "image_size": 128,
      "channels": 3,
      //sample channel
      "conditional": true
      // unconditional generation or unconditional generation(super_resolution)
    }
  },
  "train": {
    "n_iter": 400,
    "val_freq": 100,
    "save_checkpoint_freq": 100,
    "print_freq": 100,
    "optimizer": {
      "type": "adam",
      "lr": 1e-4
    },
    "ema_scheduler": {
      // not used now
      "step_start_ema": 5000,
      "update_ema_every": 1,
      "ema_decay": 0.9999
    }
  },
  "wandb": {
    "project": "coupling-denoising-sr",
    "group": "single-speaker-8-16",
    "name": "dummy"
  }
}